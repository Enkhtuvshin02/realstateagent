import os
import logging
from langchain_together import ChatTogether
from langchain_community.tools.tavily_search import TavilySearchResults

from agents.property_retriever import PropertyRetriever
from agents.district_analyzer import DistrictAnalyzer
# –®–∏–Ω—ç ReportLab PDFReportGenerator-–∏–π–≥ –∏–º–ø–æ—Ä—Ç–ª–æ—Ö
from utils.xhtml2pdf_generator import PDFReportGenerator # Changed import

logger = logging.getLogger(__name__)

class InitializationService:
    def __init__(self):
        self.llm = None
        self.search_tool = None
        self.property_retriever_agent = None
        self.district_analyzer_agent = None
        self.pdf_generator = None

    async def initialize(self):
        """–ë“Ø—Ö –±“Ø—Ä—ç–ª–¥—ç—Ö“Ø“Ø–Ω —Ö—ç—Å–≥“Ø“Ø–¥–∏–π–≥ —ç—Ö–ª“Ø“Ø–ª—ç—Ö"""
        logger.info("üîß Initializing services...")

        # API —Ç“Ø–ª—Ö“Ø“Ø—Ä“Ø“Ø–¥–∏–π–≥ —à–∞–ª–≥–∞—Ö
        together_api_key = os.getenv("TOGETHER_API_KEY")
        tavily_api_key = os.getenv("TAVILY_API_KEY")

        if not together_api_key:
            raise ValueError("TOGETHER_API_KEY is not set in environment variables")
        if not tavily_api_key:
            raise ValueError("TAVILY_API_KEY is not set in environment variables")

        # LLM-–∏–π–≥ —ç—Ö–ª“Ø“Ø–ª—ç—Ö
        logger.info("ü§ñ Initializing LLM...")
        self.llm = ChatTogether(
            together_api_key=together_api_key,
            model="meta-llama/Meta-Llama-3-70B-Instruct-Turbo",
            temperature=0.7
        )
        logger.info("‚úÖ LLM initialized")

        # –•–∞–π–ª—Ç—ã–Ω —Ö—ç—Ä—ç–≥—Å–ª–∏–π–≥ —ç—Ö–ª“Ø“Ø–ª—ç—Ö
        logger.info("üîç Initializing search tool...")
        self.search_tool = TavilySearchResults(
            max_results=5,
            search_depth="advanced",
            include_answer=True,
            tavily_api_key=tavily_api_key
        )
        logger.info("‚úÖ –•–∞–π–ª—Ç—ã–Ω —Ö—ç—Ä—ç–≥—Å–ª–∏–π–≥ —ç—Ö–ª“Ø“Ø–ª—Å—ç–Ω")

        # –ê–≥–µ–Ω—Ç—É—É–¥—ã–≥ —ç—Ö–ª“Ø“Ø–ª—ç—Ö
        logger.info("üè† –ê–≥–µ–Ω—Ç—É—É–¥—ã–≥ —ç—Ö–ª“Ø“Ø–ª—ç—Ö...")
        self.property_retriever_agent = PropertyRetriever(llm=self.llm)
        logger.info("‚úÖ Property retriever –∞–≥–µ–Ω—Ç–∏–π–≥ —ç—Ö–ª“Ø“Ø–ª—Å—ç–Ω")

        logger.info("üìä –î“Ø“Ø—Ä–≥–∏–π–Ω —à–∏–Ω–∂—ç—ç—á–∏–¥ –∑–æ—Ä–∏—É–ª—Å–∞–Ω –∞–Ω—Ö–Ω—ã ”©–≥”©–≥–¥–ª–∏–π–≥ –∞—á–∞–∞–ª–∞—Ö...")
        self.district_analyzer_agent = DistrictAnalyzer(
            llm=self.llm,
            property_retriever=self.property_retriever_agent
        )
        logger.info("‚úÖ District analyzer –∞–≥–µ–Ω—Ç–∏–π–≥ —ç—Ö–ª“Ø“Ø–ª—Å—ç–Ω")

        # ReportLab-–¥ —Å—É—É—Ä–∏–ª—Å–∞–Ω –∫–ª–∞—Å—Å—ã–≥ –∞—à–∏–≥–ª–∞–Ω PDF “Ø“Ø—Å–≥—ç–≥—á–∏–π–≥ —ç—Ö–ª“Ø“Ø–ª—ç—Ö
        logger.info("üìÑ PDF “Ø“Ø—Å–≥—ç–≥—á–∏–π–≥ —ç—Ö–ª“Ø“Ø–ª—ç—Ö...")
        self.pdf_generator = PDFReportGenerator() # This now uses ReportLabPDFGenerator internally
        logger.info("‚úÖ PDF “Ø“Ø—Å–≥—ç–≥—á–∏–π–≥ —ç—Ö–ª“Ø“Ø–ª—Å—ç–Ω")

        # –ê–Ω—Ö–Ω—ã ”©–≥”©–≥–¥–ª–∏–π–≥ –∞—á–∞–∞–ª–∞—Ö
        await self._load_initial_data()

    async def _load_initial_data(self):
        """–î“Ø“Ø—Ä–≥–∏–π–Ω —à–∏–Ω–∂—ç—ç—á–∏–¥ –∑–æ—Ä–∏—É–ª—Å–∞–Ω –∞–Ω—Ö–Ω—ã ”©–≥”©–≥–¥–ª–∏–π–≥ –∞—á–∞–∞–ª–∞—Ö"""
        logger.info("üìö –ê–Ω—Ö–Ω—ã ”©–≥”©–≥–¥–ª–∏–π–≥ –∞—á–∞–∞–ª–∞—Ö...")

        try:
            cache_status = self.district_analyzer_agent.get_cache_status()
            logger.info(f"üìä Cache status: {cache_status}")

            if not cache_status["is_fresh"]:
                logger.info("üîÑ Cache is stale, loading fresh data...")
                await self.district_analyzer_agent.update_with_realtime_data(force_update=True)
                logger.info("‚úÖ Fresh data loaded")
            else:
                logger.info("üìÖ Using cached data (fresh)")

        except Exception as e:
            logger.error(f"‚ùå Failed to load initial data: {e}")
            logger.info("üìö Continuing with static fallback data")

    async def cleanup(self):
        """–ù”©”©—Ü“Ø“Ø–¥–∏–π–≥ —Ü—ç–≤—ç—Ä–ª—ç—Ö"""
        if self.property_retriever_agent:
            await self.property_retriever_agent.close()
            logger.info("üßπ Property retriever –∞–≥–µ–Ω—Ç–∏–π–≥ —Ö–∞–∞—Å–∞–Ω")
